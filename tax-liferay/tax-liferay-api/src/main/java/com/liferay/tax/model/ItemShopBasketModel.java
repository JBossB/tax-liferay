/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.tax.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the ItemShopBasket service. Represents a row in the &quot;jb_ItemShopBasket&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.liferay.tax.model.impl.ItemShopBasketModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.liferay.tax.model.impl.ItemShopBasketImpl</code>.
 * </p>
 *
 * @author jbaeza
 * @see ItemShopBasket
 * @generated
 */
@ProviderType
public interface ItemShopBasketModel extends BaseModel<ItemShopBasket> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a item shop basket model instance should use the {@link ItemShopBasket} interface instead.
	 */

	/**
	 * Returns the primary key of this item shop basket.
	 *
	 * @return the primary key of this item shop basket
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this item shop basket.
	 *
	 * @param primaryKey the primary key of this item shop basket
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the item shop basket ID of this item shop basket.
	 *
	 * @return the item shop basket ID of this item shop basket
	 */
	public long getItemShopBasketId();

	/**
	 * Sets the item shop basket ID of this item shop basket.
	 *
	 * @param itemShopBasketId the item shop basket ID of this item shop basket
	 */
	public void setItemShopBasketId(long itemShopBasketId);

	/**
	 * Returns the shop basket ID of this item shop basket.
	 *
	 * @return the shop basket ID of this item shop basket
	 */
	public long getShopBasketId();

	/**
	 * Sets the shop basket ID of this item shop basket.
	 *
	 * @param shopBasketId the shop basket ID of this item shop basket
	 */
	public void setShopBasketId(long shopBasketId);

	/**
	 * Returns the name of this item shop basket.
	 *
	 * @return the name of this item shop basket
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this item shop basket.
	 *
	 * @param name the name of this item shop basket
	 */
	public void setName(String name);

	/**
	 * Returns the is imported of this item shop basket.
	 *
	 * @return the is imported of this item shop basket
	 */
	public boolean getIsImported();

	/**
	 * Returns <code>true</code> if this item shop basket is is imported.
	 *
	 * @return <code>true</code> if this item shop basket is is imported; <code>false</code> otherwise
	 */
	public boolean isIsImported();

	/**
	 * Sets whether this item shop basket is is imported.
	 *
	 * @param isImported the is imported of this item shop basket
	 */
	public void setIsImported(boolean isImported);

	/**
	 * Returns the is exempt of this item shop basket.
	 *
	 * @return the is exempt of this item shop basket
	 */
	public boolean getIsExempt();

	/**
	 * Returns <code>true</code> if this item shop basket is is exempt.
	 *
	 * @return <code>true</code> if this item shop basket is is exempt; <code>false</code> otherwise
	 */
	public boolean isIsExempt();

	/**
	 * Sets whether this item shop basket is is exempt.
	 *
	 * @param isExempt the is exempt of this item shop basket
	 */
	public void setIsExempt(boolean isExempt);

	/**
	 * Returns the price of this item shop basket.
	 *
	 * @return the price of this item shop basket
	 */
	public double getPrice();

	/**
	 * Sets the price of this item shop basket.
	 *
	 * @param price the price of this item shop basket
	 */
	public void setPrice(double price);

	/**
	 * Returns the active of this item shop basket.
	 *
	 * @return the active of this item shop basket
	 */
	public boolean getActive();

	/**
	 * Returns <code>true</code> if this item shop basket is active.
	 *
	 * @return <code>true</code> if this item shop basket is active; <code>false</code> otherwise
	 */
	public boolean isActive();

	/**
	 * Sets whether this item shop basket is active.
	 *
	 * @param active the active of this item shop basket
	 */
	public void setActive(boolean active);

	/**
	 * Returns the amount of this item shop basket.
	 *
	 * @return the amount of this item shop basket
	 */
	public long getAmount();

	/**
	 * Sets the amount of this item shop basket.
	 *
	 * @param amount the amount of this item shop basket
	 */
	public void setAmount(long amount);

	/**
	 * Returns the tax of this item shop basket.
	 *
	 * @return the tax of this item shop basket
	 */
	public double getTax();

	/**
	 * Sets the tax of this item shop basket.
	 *
	 * @param tax the tax of this item shop basket
	 */
	public void setTax(double tax);

	/**
	 * Returns the total of this item shop basket.
	 *
	 * @return the total of this item shop basket
	 */
	public double getTotal();

	/**
	 * Sets the total of this item shop basket.
	 *
	 * @param total the total of this item shop basket
	 */
	public void setTotal(double total);

}